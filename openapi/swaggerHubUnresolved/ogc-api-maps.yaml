openapi: 3.0.2
# Revisions:
# 2019-07-14 Reparated from a more complex domains document
#
info:
  title: OGC API Maps Building Blocks
  description: |-
    Common components used in the OGC API maps standards.

    This document is also available in [GitHub](https://github.com/opengeospatial/OGC-API-Map-Tiles/tree/master/standard/openapi). 

  version: "1.0.0"
  contact:
    name: Joan Maso
    email: joan.maso@uab.cat
  license:
    name: OGC License
    url: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/LICENSE'



components:
  schemas:
    collection-link:
      #This element is not directly linkable by other APIs because they probably will need to add other links to other resource types. Instead, it would be copied and enriched with more examples.
      type: object
      required:
        - links
      properties:
        links:
          type: array
          items:
            $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link'
          example:
            - href: 'http://example.com/collections/buildings?f=json'
              rel: self
              type: 'application/json'
              title: This document
            - href: 'http://example.com/concepts/buildings.html'
              rel: describedby
              type: text/html'
            - href: 'http://data.example.com/collections/buildings/map'
              rel: 'http://www.opengis.net/def/rel/OGC/1.0/map'
              type: 'application/json'
    # crsLibray:
        #this is just an idea for preventing long lists of CRSs. We have to see if there is consensus adopting it.
        #  type: string
        #  description: |-
        #    Reference to a CRS library giving support to a comprehensive list of CRSs that are not advertised but supported anyway.
        #  example: PROJ4G            
    crsSpatialExtents:
      type: array
      description: |-
        Available CRSs and minimum spatial extent surrounding the map
      items:
        $ref: '#/components/schemas/crsSpatialExtent'
      example:
        - crs: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
          bbox:
          - - -180
            - -90
            - 180
            - 90
        - crs: 'http://www.opengis.net/def/crs/EPSG/0/3395'
          bbox:
          - - -20037508.3427892
            - -20037508.3427892
            - 20037508.3427892
            - 20037508.3427892
    crsSpatialExtent:
      description: |-
        The spatial extent of the element in the collection.
      type: object
      # Note that SpatialExtent in Common has bbox as required.
      required: 
        - crs
      properties:
        crs:
          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/crs'
        bbox:
          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/bbox'
    map-metadata:
      type: object
      properties:
        # A WMS layer definition has id, title, description, keyword that are already defined in OWS Common
        # wgs84BoundingBox is the 'extent' that is already defined in OWS Common
        # BoundingBox is the crsSpatialExtents that is already defined in OWS Common
        # For the moment we will assume that maps can only be produced in the crs's advertised by the collection in the common part.
        defaultStyle:
          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-styles/1.0.0#/components/schemas/default-style'
        wgs84SpatialExtent:
          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/bbox'
        crsSpatialExtents:
          $ref: '#/components/schemas/crsSpatialExtents'
        supportedCRSs:
          type: array
          items: 
            type: string
        minScaleDenominador:
          type: number
          description: |-
            Minimum scale denominator (inclusive) for which it is appropriate to generate a map of this collection. Requests outside this interval will return an HTTP 404. If it is not present we will assume there is no limit.
          example: 10
        maxScaleDenominador:
          type: number
          description: |-
            Maximum scale denominator (inclusive) for which it is appropriate to generate a map of this collection. Requests outside this interval will return an HTTP 404 If it is not present we will assume there is no limit.
          example: 10000000
        minCellSize:
          type: number
          description: |-
            Minimum cell size (inclusive). If it is not present we will assume there is no limit.
        maxCellSize:
          type: number
          description: |-
            Maximum cell size (inclusive). If it is not present we will assume there is no limit.
          example: 10000000        #spatialResolution (resx) this should be part of the common metadata but currently is not.
        recomendedFormat:
          type: string
          description: |-
              Recommended output formats for a map request. Depending of the nature of the data, a format might be better than another. Categorical data looks better in a PNG but continuos data and pictures are smaller a JPEG. The map operation details all available formats for the OGC API maps. In contrast, this is the better one for this type of information. It would be one of the supported for the map operation
          example: 'image/jpeg'
        #queryable is not included here because it is indicated by a link with 'rel':'info' but I'm not sure it is the right decision.
        #cascaded is removed becasue the group believed it has no practical use.          
        #opaque: this is rarely useful and we prefer not to includ it in this one. Indicates whether the map data represents features that probably do not completely fill space shows the background opaque (true) or transparent(false).
        #noSubsets: This is a very old paramter in WMS and I recommend to deprecate it. Indicates whether the server can produce a map that is a subset of the full bounding box.
        #fixedWidth: We agree this is solved by the "tiles API" now and we do not what this here
        #fixedHeight: We agree this is solved by the "tiles API" now and we do not what this here
        maxWidth:
          type: number
          description: |-
            Maximum width and height values that a client is permitted to include in bbox subset operation.  If absent the server imposes no limit.
          example: 2048
        maxHeight: 
          type: number
          description: |-
            Maximum width and height values that a client is permitted to include in bbox subset operation.  If absent the server imposes no limit.
          example: 2048            
    geodata-map-metadata:
      allOf:
      - $ref: '#/components/schemas/map-metadata'
    dataset-map-metadata:
      allOf:
      - $ref: '#/components/schemas/map-metadata'      
    collection-patch:
      type: object
      properties:
        styles:
          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-styles/1.0.0#/components/schemas/style-set'
        defaultStyle:
          type: string
          nullable: true
          description: |-
            the style id of a recommended default style to use for this collection
          example: 'topographic'
  responses:
    tiles:
      description: |-
        Description of the tiles.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/map-metadata'
  parameters:
    bbox:
      name: bbox
      in: query
      description: |-
        Bounding box of the rendered map. The bounding box is provided as four numbers.

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2

        coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 4
        items:
          type: number
          format: double
      style: form
      explode: false
    crs:
      name: crs
      in: query
      description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.
      required: false
      schema:
        type: string
        default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
      example:
        'http://www.opengis.net/def/crs/OGC/1.3/CRS84'  
    mapId:
      name: mapId
      in: path
      description: Local identifier of a specific map created with a post operation
      required: true
      style: simple
      explode: false
      schema:
        type: string
    crsId:
      name: crsId
      in: path
      description: |-
        Local identifier of a specific CRS. A list of all available CRSIds can be found under the /CRS path. The default CRS is WGS 84.
      required: true
      schema:
        type: string
      example: CRS84
    width:
      name: width
      in: query
      description: |-
        Width of the viewport to present the response (the map subset).
      required: false
      style: form
      explode: false
      schema:
        type: number
    height:
      name: height
      in: query
      description: |-
        Height of the viewport to present the response (the map subset).
      required: false
      style: form
      explode: false
      schema:
        type: number
    cellSize:
      name: cell-size
      in: query
      description:
        cell size of the viewport to present the response in millimeters.
      required: false
      style: form
      explode: false
      schema:
        type: number
    transparent:
      name: transparent
      in: query
      description: |-
        Background transparency of map (default=true).
      required: false
      style: form
      explode: false
      schema:
        type: boolean
        default: true
    bgcolor:
      name: bgcolor
      in: query
      description: |-
        Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified "opaque" opacity is assumed.
      required: false
      style: form
      explode: false
      schema:
        type: string
        default: 0xFFFFFF